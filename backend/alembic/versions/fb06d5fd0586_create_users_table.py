"""Create users table
Revision ID: abc123
Revises: 
Create Date: YYYY-MM-DD HH:MM:SS.SSSSSS

"""
import uuid
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy import String

from src.utils.auth import hash_password
<<<<<<< HEAD
from src.config import APP_ADMIN_EMAIL, APP_ADMIN_PASS
=======
>>>>>>> master

# revision identifiers, used by Alembic.
revision = 'abc123'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # commands auto generated by Alembic - please adjust!
    op.create_table('users',
        sa.Column('id', sa.String(36), primary_key=True),
        sa.Column('full_name', sa.String(255), nullable=False),
        sa.Column('email', sa.String(255), nullable=False),
        sa.Column('username', sa.String(255), nullable=False),
        sa.Column('password', sa.String(255), nullable=False),
        sa.Column('salt', sa.String(255), nullable=False),
        # sa.Column('organization_id', sa.Integer(), nullable=True),
        # sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )
    op.create_index('ix_users_email', 'users', ['email'])
    op.create_index('ix_users_username', 'users', ['username'])
    # end Alembic commands
    
    # Create an admin user
    users_table = table('users',
        column('id', String),
        column('full_name', String),
        column('email', String),
        column('username', String),
        column('password', String),
        column('salt', String)
    )

    admin_id = str(uuid.uuid4())
    admin_full_name = 'Admin User'
    admin_email = APP_ADMIN_EMAIL
    admin_username = 'admin'
    admin_password, salt = hash_password(APP_ADMIN_PASS)
    
    op.bulk_insert(users_table,
        [
            {'id': admin_id, 'full_name': admin_full_name, 'email': admin_email, 'username': admin_username, 'password': admin_password, 'salt': salt}
        ]
    )

def downgrade():
    # commands auto generated by Alembic - please adjust!
    op.drop_index('ix_users_username', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_table('users')
    # end Alembic commands
